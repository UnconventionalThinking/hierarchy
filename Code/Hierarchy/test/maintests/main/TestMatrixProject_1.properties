#  Properties file for the TestMatrixProject_1 matrix project
#  ** In paths, use forward slashes, \u2018/\u2019, in both unix and windows **

#  Set the path to the Hierarchy.jar directory.
#hierarchy.jar.dir=/Users/peterjoh/Projects/NDA_and_MP/Code/Hierarchy/dist
hierarchy.jar.dir=/Users/admin/Projects-Local/hierarchy/Code/Hierarchy/dist

#  Set the path to the javac directory.
#javac.dir=/System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Home/bin
javac.dir=/usr/bin

#  Set the class path used in All Phases of metacompilation
classpath.allphases=
#  Set the class path used in the Java Phase of metacompilation
classpath.java.phase=
#  Set the class path used in the Schema Phase of metacompilation
classpath.schema.phase=
#  Set the class path used in the Matrix Phase of metacompilation
classpath.matrix.phase=
#  Set the class path used in the Embedded Phase of metacompilation
classpath.embedded.phase=


#  Set the location of base dir of the matrix source (in other words, the base dir of your project which has the matrix, schema, & embedded code files)
source.metacode.basedir=../Hierarchy_TestMatrixProject_1_METASRC/src
#  Set the package name that the Matrix application classes will be placed
matrix.appclasses.package=maintests.samples.typeinfotest
#  Set the path the the base directory where the intermediate, meta build files (generated java files) will be placed.
#  Sometimes, it's useful to point this back to the 'source.metacode.basedir', so that the generated java files are placed back into the src directory.
build.meta.basedir=../Hierarchy_TestMatrixProject_1_METASRC/matrix_build/build1_meta
#  Set the path the the base directory where the final class files will be placed.
build.final.basedir=../Hierarchy_TestMatrixProject_1_METASRC/matrix_build/build2_final

#  Set whether to the final stage of compilation: Compiling the java files from the meta phase into the final class files. Default is true;
compileMetaFiles.into.finalClassFiles=true
#  Set whether to clean the build meta and build final directories before metacompilation (true or false). Default is false
clean=true

# Set whether before any metacompilation is done, to compile all the Java files in the src first. These compiled Java classes will be available
# to the schemas/matrices/embedded code. If this setting is false, then use the 'initiallyCompileJavaCode.SelectedClassesList' instead. Default is false.
# NOTE: You typically SHOULD NOT use this (so set to false), and instead, specify exactly the list of classes to initially compile using the
# 'initiallyCompileJavaCode.SelectedClassesList' setting.
initiallyCompileAllJavaCode=false
# If you want to want to individually select which classes to initially compile, set the previous setting, 'initiallyCompileAllJavaCode' to false
# (or leave empty), and supply the list of classes that you wanted the be initially compiled using this setting. Use full class names with packages,
# and separated by commas.
#   For ex. initiallyCompileJavaCode.SelectedClassesList = mypackage.myclass, mypackage.myclass2
initiallyCompileJavaCode.SelectedClassesList = maintests.samples.typeinfotest.Java_TestSample_Simple, maintests.samples.typeinfotest.Java_TypeInfoTestSample, maintests.samples.typeinfotest.TestClass, maintests.samples.typeinfotest.anotherpackage.TestClassInAnotherPackage, maintests.samples.typeinfotest.otherpackage.TestChildClass, maintests.samples.typeinfotest.otherpackage.TestClassInOtherPackage, maintests.samples.typeinfotest.thirdpackage.TestClass2_InThirdPackage, maintests.samples.typeinfotest.thirdpackage.TestClassInThirdPackage

# If there's an error, print out the internal stack trace of the error.
printVerboseErrors=true
