/* Copyright 2012, 2013 Unconventional Thinking
 *
 * This file is part of Hierarchy.
 *
 * Hierarchy is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * Hierarchy is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Hierarchy.  
 * If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package net.unconventionalthinking.compiler.tools;

/**
 *
 * @author peterjoh
 */
public class Token_Utilities {
    /**
     * This method is used by the Token class that is generated by sableCC. the developer should add a code() method
     * to his Token class that clall this one.
     * The way this class behaves is: it returns a codeBuilder if one exists.
     * If one doesn't exist, then it first checks the SableCC.getText() method to see if it has text. If it does, then
     * create a new code Builder with the text and set it to the node, and return it.
     */
    public static CodeBuilder token_code(String text, CodeBuilder codeBuilder) {
        if (codeBuilder == null){
            if (text != null && text.trim().length() != 0)
                codeBuilder = new CodeBuilder(text);
            else
                codeBuilder = new CodeBuilder();
        }
        return codeBuilder;
    }
}
