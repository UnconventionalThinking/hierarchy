/* Copyright 2012, 2013 Unconventional Thinking
 *
 * This file is part of Hierarchy.
 *
 * Hierarchy is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * Hierarchy is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Hierarchy.  
 * If not, see <http://www.gnu.org/licenses/>.
 */

/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.unconventionalthinking.hierarchy.grammar.parser;

import net.unconventionalthinking.hierarchy.grammar.node.*;
import net.unconventionalthinking.hierarchy.grammar.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTMpThickMpArrowOperator(@SuppressWarnings("unused") TMpThickMpArrowOperator node)
    {
        this.index = 0;
    }

    @Override
    public void caseTMpArrowOperator(@SuppressWarnings("unused") TMpArrowOperator node)
    {
        this.index = 1;
    }

    @Override
    public void caseTMpDashLtOperator(@SuppressWarnings("unused") TMpDashLtOperator node)
    {
        this.index = 2;
    }

    @Override
    public void caseTMpFieldAccessOperator(@SuppressWarnings("unused") TMpFieldAccessOperator node)
    {
        this.index = 3;
    }

    @Override
    public void caseTMpColonLtOperator(@SuppressWarnings("unused") TMpColonLtOperator node)
    {
        this.index = 4;
    }

    @Override
    public void caseTMpColonPercentOperator(@SuppressWarnings("unused") TMpColonPercentOperator node)
    {
        this.index = 5;
    }

    @Override
    public void caseTMpColonColonOperator(@SuppressWarnings("unused") TMpColonColonOperator node)
    {
        this.index = 6;
    }

    @Override
    public void caseTMpSetCreationOperator(@SuppressWarnings("unused") TMpSetCreationOperator node)
    {
        this.index = 7;
    }

    @Override
    public void caseTMpSymbolMpSetCreationOperator(@SuppressWarnings("unused") TMpSymbolMpSetCreationOperator node)
    {
        this.index = 8;
    }

    @Override
    public void caseTMpTypedMpSetCreationOperator(@SuppressWarnings("unused") TMpTypedMpSetCreationOperator node)
    {
        this.index = 9;
    }

    @Override
    public void caseTMpTypedMpSymbolMpSetCreationOperator(@SuppressWarnings("unused") TMpTypedMpSymbolMpSetCreationOperator node)
    {
        this.index = 10;
    }

    @Override
    public void caseTMpSetCreationOperatorWName(@SuppressWarnings("unused") TMpSetCreationOperatorWName node)
    {
        this.index = 11;
    }

    @Override
    public void caseTMpSymbolSetCreationOperatorWName(@SuppressWarnings("unused") TMpSymbolSetCreationOperatorWName node)
    {
        this.index = 12;
    }

    @Override
    public void caseTMpTypedSetCreationOperatorWName(@SuppressWarnings("unused") TMpTypedSetCreationOperatorWName node)
    {
        this.index = 13;
    }

    @Override
    public void caseTMpTypedSymbolSetCreationOperatorWName(@SuppressWarnings("unused") TMpTypedSymbolSetCreationOperatorWName node)
    {
        this.index = 14;
    }

    @Override
    public void caseTMpGtWBraceOperator(@SuppressWarnings("unused") TMpGtWBraceOperator node)
    {
        this.index = 15;
    }

    @Override
    public void caseTMpSymbolSetCreationOperator(@SuppressWarnings("unused") TMpSymbolSetCreationOperator node)
    {
        this.index = 16;
    }

    @Override
    public void caseTMpCodeClosureOperator(@SuppressWarnings("unused") TMpCodeClosureOperator node)
    {
        this.index = 17;
    }

    @Override
    public void caseTMpPairSinglequotes(@SuppressWarnings("unused") TMpPairSinglequotes node)
    {
        this.index = 18;
    }

    @Override
    public void caseTMpDittoPrevLevelOperator(@SuppressWarnings("unused") TMpDittoPrevLevelOperator node)
    {
        this.index = 19;
    }

    @Override
    public void caseTMpDeclarationsKeyword(@SuppressWarnings("unused") TMpDeclarationsKeyword node)
    {
        this.index = 20;
    }

    @Override
    public void caseTMpMatrixKeyword(@SuppressWarnings("unused") TMpMatrixKeyword node)
    {
        this.index = 21;
    }

    @Override
    public void caseTMpSchemaKeyword(@SuppressWarnings("unused") TMpSchemaKeyword node)
    {
        this.index = 22;
    }

    @Override
    public void caseTMpKeyKeyword(@SuppressWarnings("unused") TMpKeyKeyword node)
    {
        this.index = 23;
    }

    @Override
    public void caseTMpMemberKeyword(@SuppressWarnings("unused") TMpMemberKeyword node)
    {
        this.index = 24;
    }

    @Override
    public void caseTMpInKeyword(@SuppressWarnings("unused") TMpInKeyword node)
    {
        this.index = 25;
    }

    @Override
    public void caseTMpUsesKeyword(@SuppressWarnings("unused") TMpUsesKeyword node)
    {
        this.index = 26;
    }

    @Override
    public void caseTMpCallKeyword(@SuppressWarnings("unused") TMpCallKeyword node)
    {
        this.index = 27;
    }

    @Override
    public void caseTMpSetKeyword(@SuppressWarnings("unused") TMpSetKeyword node)
    {
        this.index = 28;
    }

    @Override
    public void caseTMpVarKeyword(@SuppressWarnings("unused") TMpVarKeyword node)
    {
        this.index = 29;
    }

    @Override
    public void caseTMpSymbolKeyword(@SuppressWarnings("unused") TMpSymbolKeyword node)
    {
        this.index = 30;
    }

    @Override
    public void caseTMpElementKeyword(@SuppressWarnings("unused") TMpElementKeyword node)
    {
        this.index = 31;
    }

    @Override
    public void caseTMpDescriptorKeyword(@SuppressWarnings("unused") TMpDescriptorKeyword node)
    {
        this.index = 32;
    }

    @Override
    public void caseTMpItemKeyword(@SuppressWarnings("unused") TMpItemKeyword node)
    {
        this.index = 33;
    }

    @Override
    public void caseTMpFieldKeyword(@SuppressWarnings("unused") TMpFieldKeyword node)
    {
        this.index = 34;
    }

    @Override
    public void caseTMpNewKeyword(@SuppressWarnings("unused") TMpNewKeyword node)
    {
        this.index = 35;
    }

    @Override
    public void caseTMpClosureKeyword(@SuppressWarnings("unused") TMpClosureKeyword node)
    {
        this.index = 36;
    }

    @Override
    public void caseTMpNKeyword(@SuppressWarnings("unused") TMpNKeyword node)
    {
        this.index = 37;
    }

    @Override
    public void caseTMpNanKeyword(@SuppressWarnings("unused") TMpNanKeyword node)
    {
        this.index = 38;
    }

    @Override
    public void caseTMpSelectKeyword(@SuppressWarnings("unused") TMpSelectKeyword node)
    {
        this.index = 39;
    }

    @Override
    public void caseTMpFromKeyword(@SuppressWarnings("unused") TMpFromKeyword node)
    {
        this.index = 40;
    }

    @Override
    public void caseTMpWhereKeyword(@SuppressWarnings("unused") TMpWhereKeyword node)
    {
        this.index = 41;
    }

    @Override
    public void caseTMpFieldsKeyword(@SuppressWarnings("unused") TMpFieldsKeyword node)
    {
        this.index = 42;
    }

    @Override
    public void caseTMpAnnotationsKeyword(@SuppressWarnings("unused") TMpAnnotationsKeyword node)
    {
        this.index = 43;
    }

    @Override
    public void caseTMpErrorsKeyword(@SuppressWarnings("unused") TMpErrorsKeyword node)
    {
        this.index = 44;
    }

    @Override
    public void caseTMpExceptionsKeyword(@SuppressWarnings("unused") TMpExceptionsKeyword node)
    {
        this.index = 45;
    }

    @Override
    public void caseTMpEmptyKeyword(@SuppressWarnings("unused") TMpEmptyKeyword node)
    {
        this.index = 46;
    }

    @Override
    public void caseTMpFiltersKeyword(@SuppressWarnings("unused") TMpFiltersKeyword node)
    {
        this.index = 47;
    }

    @Override
    public void caseTMpAllKeyword(@SuppressWarnings("unused") TMpAllKeyword node)
    {
        this.index = 48;
    }

    @Override
    public void caseTMpAnnoteDefaultKeyword(@SuppressWarnings("unused") TMpAnnoteDefaultKeyword node)
    {
        this.index = 49;
    }

    @Override
    public void caseTMpAccessorKeyword(@SuppressWarnings("unused") TMpAccessorKeyword node)
    {
        this.index = 50;
    }

    @Override
    public void caseTMpReturnKeyword(@SuppressWarnings("unused") TMpReturnKeyword node)
    {
        this.index = 51;
    }

    @Override
    public void caseTMpItKeyword(@SuppressWarnings("unused") TMpItKeyword node)
    {
        this.index = 52;
    }

    @Override
    public void caseTMpExistKeyword(@SuppressWarnings("unused") TMpExistKeyword node)
    {
        this.index = 53;
    }

    @Override
    public void caseTMpValidKeyword(@SuppressWarnings("unused") TMpValidKeyword node)
    {
        this.index = 54;
    }

    @Override
    public void caseTMpDefaultKeyword(@SuppressWarnings("unused") TMpDefaultKeyword node)
    {
        this.index = 55;
    }

    @Override
    public void caseTMpUnusedKeyword(@SuppressWarnings("unused") TMpUnusedKeyword node)
    {
        this.index = 56;
    }

    @Override
    public void caseTMpDittoKeyword(@SuppressWarnings("unused") TMpDittoKeyword node)
    {
        this.index = 57;
    }

    @Override
    public void caseTAt(@SuppressWarnings("unused") TAt node)
    {
        this.index = 58;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 59;
    }

    @Override
    public void caseTDot(@SuppressWarnings("unused") TDot node)
    {
        this.index = 60;
    }

    @Override
    public void caseTDotDotDot(@SuppressWarnings("unused") TDotDotDot node)
    {
        this.index = 61;
    }

    @Override
    public void caseTLBkt(@SuppressWarnings("unused") TLBkt node)
    {
        this.index = 62;
    }

    @Override
    public void caseTLBrc(@SuppressWarnings("unused") TLBrc node)
    {
        this.index = 63;
    }

    @Override
    public void caseTLPar(@SuppressWarnings("unused") TLPar node)
    {
        this.index = 64;
    }

    @Override
    public void caseTRBkt(@SuppressWarnings("unused") TRBkt node)
    {
        this.index = 65;
    }

    @Override
    public void caseTRBrc(@SuppressWarnings("unused") TRBrc node)
    {
        this.index = 66;
    }

    @Override
    public void caseTRPar(@SuppressWarnings("unused") TRPar node)
    {
        this.index = 67;
    }

    @Override
    public void caseTSemi(@SuppressWarnings("unused") TSemi node)
    {
        this.index = 68;
    }

    @Override
    public void caseTAmp(@SuppressWarnings("unused") TAmp node)
    {
        this.index = 69;
    }

    @Override
    public void caseTAmpAmp(@SuppressWarnings("unused") TAmpAmp node)
    {
        this.index = 70;
    }

    @Override
    public void caseTAmpAssign(@SuppressWarnings("unused") TAmpAssign node)
    {
        this.index = 71;
    }

    @Override
    public void caseTAssign(@SuppressWarnings("unused") TAssign node)
    {
        this.index = 72;
    }

    @Override
    public void caseTBar(@SuppressWarnings("unused") TBar node)
    {
        this.index = 73;
    }

    @Override
    public void caseTBarAssign(@SuppressWarnings("unused") TBarAssign node)
    {
        this.index = 74;
    }

    @Override
    public void caseTBarBar(@SuppressWarnings("unused") TBarBar node)
    {
        this.index = 75;
    }

    @Override
    public void caseTCaret(@SuppressWarnings("unused") TCaret node)
    {
        this.index = 76;
    }

    @Override
    public void caseTCaretAssign(@SuppressWarnings("unused") TCaretAssign node)
    {
        this.index = 77;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 78;
    }

    @Override
    public void caseTEmark(@SuppressWarnings("unused") TEmark node)
    {
        this.index = 79;
    }

    @Override
    public void caseTEq(@SuppressWarnings("unused") TEq node)
    {
        this.index = 80;
    }

    @Override
    public void caseTGt(@SuppressWarnings("unused") TGt node)
    {
        this.index = 81;
    }

    @Override
    public void caseTGteq(@SuppressWarnings("unused") TGteq node)
    {
        this.index = 82;
    }

    @Override
    public void caseTLt(@SuppressWarnings("unused") TLt node)
    {
        this.index = 83;
    }

    @Override
    public void caseTLteq(@SuppressWarnings("unused") TLteq node)
    {
        this.index = 84;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 85;
    }

    @Override
    public void caseTMinusAssign(@SuppressWarnings("unused") TMinusAssign node)
    {
        this.index = 86;
    }

    @Override
    public void caseTMinusMinus(@SuppressWarnings("unused") TMinusMinus node)
    {
        this.index = 87;
    }

    @Override
    public void caseTNeq(@SuppressWarnings("unused") TNeq node)
    {
        this.index = 88;
    }

    @Override
    public void caseTPercent(@SuppressWarnings("unused") TPercent node)
    {
        this.index = 89;
    }

    @Override
    public void caseTPercentAssign(@SuppressWarnings("unused") TPercentAssign node)
    {
        this.index = 90;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 91;
    }

    @Override
    public void caseTPlusAssign(@SuppressWarnings("unused") TPlusAssign node)
    {
        this.index = 92;
    }

    @Override
    public void caseTPlusPlus(@SuppressWarnings("unused") TPlusPlus node)
    {
        this.index = 93;
    }

    @Override
    public void caseTQmark(@SuppressWarnings("unused") TQmark node)
    {
        this.index = 94;
    }

    @Override
    public void caseTShl(@SuppressWarnings("unused") TShl node)
    {
        this.index = 95;
    }

    @Override
    public void caseTShlAssign(@SuppressWarnings("unused") TShlAssign node)
    {
        this.index = 96;
    }

    @Override
    public void caseTShr(@SuppressWarnings("unused") TShr node)
    {
        this.index = 97;
    }

    @Override
    public void caseTShrAssign(@SuppressWarnings("unused") TShrAssign node)
    {
        this.index = 98;
    }

    @Override
    public void caseTSlash(@SuppressWarnings("unused") TSlash node)
    {
        this.index = 99;
    }

    @Override
    public void caseTSlashAssign(@SuppressWarnings("unused") TSlashAssign node)
    {
        this.index = 100;
    }

    @Override
    public void caseTStar(@SuppressWarnings("unused") TStar node)
    {
        this.index = 101;
    }

    @Override
    public void caseTStarAssign(@SuppressWarnings("unused") TStarAssign node)
    {
        this.index = 102;
    }

    @Override
    public void caseTTilde(@SuppressWarnings("unused") TTilde node)
    {
        this.index = 103;
    }

    @Override
    public void caseTUshr(@SuppressWarnings("unused") TUshr node)
    {
        this.index = 104;
    }

    @Override
    public void caseTUshrAssign(@SuppressWarnings("unused") TUshrAssign node)
    {
        this.index = 105;
    }

    @Override
    public void caseTAbstract(@SuppressWarnings("unused") TAbstract node)
    {
        this.index = 106;
    }

    @Override
    public void caseTAssert(@SuppressWarnings("unused") TAssert node)
    {
        this.index = 107;
    }

    @Override
    public void caseTBoolean(@SuppressWarnings("unused") TBoolean node)
    {
        this.index = 108;
    }

    @Override
    public void caseTBreak(@SuppressWarnings("unused") TBreak node)
    {
        this.index = 109;
    }

    @Override
    public void caseTByte(@SuppressWarnings("unused") TByte node)
    {
        this.index = 110;
    }

    @Override
    public void caseTCase(@SuppressWarnings("unused") TCase node)
    {
        this.index = 111;
    }

    @Override
    public void caseTCatch(@SuppressWarnings("unused") TCatch node)
    {
        this.index = 112;
    }

    @Override
    public void caseTChar(@SuppressWarnings("unused") TChar node)
    {
        this.index = 113;
    }

    @Override
    public void caseTClassToken(@SuppressWarnings("unused") TClassToken node)
    {
        this.index = 114;
    }

    @Override
    public void caseTConst(@SuppressWarnings("unused") TConst node)
    {
        this.index = 115;
    }

    @Override
    public void caseTContinue(@SuppressWarnings("unused") TContinue node)
    {
        this.index = 116;
    }

    @Override
    public void caseTDefault(@SuppressWarnings("unused") TDefault node)
    {
        this.index = 117;
    }

    @Override
    public void caseTDo(@SuppressWarnings("unused") TDo node)
    {
        this.index = 118;
    }

    @Override
    public void caseTDouble(@SuppressWarnings("unused") TDouble node)
    {
        this.index = 119;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 120;
    }

    @Override
    public void caseTEnum(@SuppressWarnings("unused") TEnum node)
    {
        this.index = 121;
    }

    @Override
    public void caseTExtends(@SuppressWarnings("unused") TExtends node)
    {
        this.index = 122;
    }

    @Override
    public void caseTFalse(@SuppressWarnings("unused") TFalse node)
    {
        this.index = 123;
    }

    @Override
    public void caseTFinal(@SuppressWarnings("unused") TFinal node)
    {
        this.index = 124;
    }

    @Override
    public void caseTFinallyToken(@SuppressWarnings("unused") TFinallyToken node)
    {
        this.index = 125;
    }

    @Override
    public void caseTFloat(@SuppressWarnings("unused") TFloat node)
    {
        this.index = 126;
    }

    @Override
    public void caseTFor(@SuppressWarnings("unused") TFor node)
    {
        this.index = 127;
    }

    @Override
    public void caseTGoto(@SuppressWarnings("unused") TGoto node)
    {
        this.index = 128;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 129;
    }

    @Override
    public void caseTImplements(@SuppressWarnings("unused") TImplements node)
    {
        this.index = 130;
    }

    @Override
    public void caseTImport(@SuppressWarnings("unused") TImport node)
    {
        this.index = 131;
    }

    @Override
    public void caseTInstanceof(@SuppressWarnings("unused") TInstanceof node)
    {
        this.index = 132;
    }

    @Override
    public void caseTInt(@SuppressWarnings("unused") TInt node)
    {
        this.index = 133;
    }

    @Override
    public void caseTInterface(@SuppressWarnings("unused") TInterface node)
    {
        this.index = 134;
    }

    @Override
    public void caseTLong(@SuppressWarnings("unused") TLong node)
    {
        this.index = 135;
    }

    @Override
    public void caseTNative(@SuppressWarnings("unused") TNative node)
    {
        this.index = 136;
    }

    @Override
    public void caseTNew(@SuppressWarnings("unused") TNew node)
    {
        this.index = 137;
    }

    @Override
    public void caseTPackage(@SuppressWarnings("unused") TPackage node)
    {
        this.index = 138;
    }

    @Override
    public void caseTPrivate(@SuppressWarnings("unused") TPrivate node)
    {
        this.index = 139;
    }

    @Override
    public void caseTProtected(@SuppressWarnings("unused") TProtected node)
    {
        this.index = 140;
    }

    @Override
    public void caseTPublic(@SuppressWarnings("unused") TPublic node)
    {
        this.index = 141;
    }

    @Override
    public void caseTReturn(@SuppressWarnings("unused") TReturn node)
    {
        this.index = 142;
    }

    @Override
    public void caseTShort(@SuppressWarnings("unused") TShort node)
    {
        this.index = 143;
    }

    @Override
    public void caseTStatic(@SuppressWarnings("unused") TStatic node)
    {
        this.index = 144;
    }

    @Override
    public void caseTStrictfp(@SuppressWarnings("unused") TStrictfp node)
    {
        this.index = 145;
    }

    @Override
    public void caseTSuperToken(@SuppressWarnings("unused") TSuperToken node)
    {
        this.index = 146;
    }

    @Override
    public void caseTSwitch(@SuppressWarnings("unused") TSwitch node)
    {
        this.index = 147;
    }

    @Override
    public void caseTSynchronized(@SuppressWarnings("unused") TSynchronized node)
    {
        this.index = 148;
    }

    @Override
    public void caseTThis(@SuppressWarnings("unused") TThis node)
    {
        this.index = 149;
    }

    @Override
    public void caseTThrow(@SuppressWarnings("unused") TThrow node)
    {
        this.index = 150;
    }

    @Override
    public void caseTThrowsToken(@SuppressWarnings("unused") TThrowsToken node)
    {
        this.index = 151;
    }

    @Override
    public void caseTTransient(@SuppressWarnings("unused") TTransient node)
    {
        this.index = 152;
    }

    @Override
    public void caseTTrue(@SuppressWarnings("unused") TTrue node)
    {
        this.index = 153;
    }

    @Override
    public void caseTTry(@SuppressWarnings("unused") TTry node)
    {
        this.index = 154;
    }

    @Override
    public void caseTVoid(@SuppressWarnings("unused") TVoid node)
    {
        this.index = 155;
    }

    @Override
    public void caseTVolatile(@SuppressWarnings("unused") TVolatile node)
    {
        this.index = 156;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 157;
    }

    @Override
    public void caseTCharacterLiteral(@SuppressWarnings("unused") TCharacterLiteral node)
    {
        this.index = 158;
    }

    @Override
    public void caseTFloatingPointLiteral(@SuppressWarnings("unused") TFloatingPointLiteral node)
    {
        this.index = 159;
    }

    @Override
    public void caseTIntegerLiteral(@SuppressWarnings("unused") TIntegerLiteral node)
    {
        this.index = 160;
    }

    @Override
    public void caseTNullLiteral(@SuppressWarnings("unused") TNullLiteral node)
    {
        this.index = 161;
    }

    @Override
    public void caseTStringLiteral(@SuppressWarnings("unused") TStringLiteral node)
    {
        this.index = 162;
    }

    @Override
    public void caseTMpTokenNumberRange(@SuppressWarnings("unused") TMpTokenNumberRange node)
    {
        this.index = 163;
    }

    @Override
    public void caseTMpSymbolLiteralQuotes(@SuppressWarnings("unused") TMpSymbolLiteralQuotes node)
    {
        this.index = 164;
    }

    @Override
    public void caseTMpSymbolLiteralBacktiks(@SuppressWarnings("unused") TMpSymbolLiteralBacktiks node)
    {
        this.index = 165;
    }

    @Override
    public void caseTMpJunk1(@SuppressWarnings("unused") TMpJunk1 node)
    {
        this.index = 166;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 167;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 168;
    }
}
