/* Copyright 2012, 2013 Unconventional Thinking
 *
 * This file is part of Hierarchy.
 *
 * Hierarchy is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * Hierarchy is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Hierarchy.  
 * If not, see <http://www.gnu.org/licenses/>.
 */


package net.unconventionalthinking.matrix.symbols;

/**
 *
 * @author peterjoh
 */
public class SymbolConstants {

    public static final String MultiPart_Separator = ".";
    public static final String MultiPart_Separator_IdentFormat = "$__$";

    public static final String MultiPartSymbol_w_SingleSymbol_Prefix = "SINGLE_MULTIPART__";

    public static final String SymbolPath_SymbolSeparator = "->";
    public static final String SymbolPath_SymbolSeparator_IdentFormat = "$_S_$";

    public static final String SymbolFile_SymbolName__ReservedWord_Suffix = "$_sym_$";
    public static final String SymbolFile_SymbolName__SymbolID_Suffix = "$_ID_$";


    /**
     * For separating the name groups in an identifier. Like for descriptor variables generated by the meta compiler:
     *
     * Descriptor descriptor$_X_$MyDesc1;
     */
    public static final String SymbolPath_IdentifierGroupSeparator = "$_X_$";


    public static final String ThreeLevelSymbol_Separator_IdentFormat = "$_CC_$";


    
    public static int   CREATION_STARTLEVEL_MAX = Integer.MAX_VALUE;

}
