/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstractsystems.partita.metacode.grammar.node;

import com.abstractsystems.partita.metacode.grammar.analysis.*;

@SuppressWarnings("nls")
public final class AMctOutputtagSingle extends PMctOutputtagSingle
{
    private TCodetagOpen _codetagOpen_;
    private PMctAttributeOutput _mctAttributeOutput_;
    private TCodetagOpenEndtokenSingle _codetagOpenEndtokenSingle_;

    public AMctOutputtagSingle()
    {
        // Constructor
    }

    public AMctOutputtagSingle(
        @SuppressWarnings("hiding") TCodetagOpen _codetagOpen_,
        @SuppressWarnings("hiding") PMctAttributeOutput _mctAttributeOutput_,
        @SuppressWarnings("hiding") TCodetagOpenEndtokenSingle _codetagOpenEndtokenSingle_)
    {
        // Constructor
        setCodetagOpen(_codetagOpen_);

        setMctAttributeOutput(_mctAttributeOutput_);

        setCodetagOpenEndtokenSingle(_codetagOpenEndtokenSingle_);

    }

    @Override
    public Object clone()
    {
        return new AMctOutputtagSingle(
            cloneNode(this._codetagOpen_),
            cloneNode(this._mctAttributeOutput_),
            cloneNode(this._codetagOpenEndtokenSingle_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMctOutputtagSingle(this);
    }

    public TCodetagOpen getCodetagOpen()
    {
        return this._codetagOpen_;
    }

    public void setCodetagOpen(TCodetagOpen node)
    {
        if(this._codetagOpen_ != null)
        {
            this._codetagOpen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._codetagOpen_ = node;
    }

    public PMctAttributeOutput getMctAttributeOutput()
    {
        return this._mctAttributeOutput_;
    }

    public void setMctAttributeOutput(PMctAttributeOutput node)
    {
        if(this._mctAttributeOutput_ != null)
        {
            this._mctAttributeOutput_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mctAttributeOutput_ = node;
    }

    public TCodetagOpenEndtokenSingle getCodetagOpenEndtokenSingle()
    {
        return this._codetagOpenEndtokenSingle_;
    }

    public void setCodetagOpenEndtokenSingle(TCodetagOpenEndtokenSingle node)
    {
        if(this._codetagOpenEndtokenSingle_ != null)
        {
            this._codetagOpenEndtokenSingle_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._codetagOpenEndtokenSingle_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._codetagOpen_)
            + toString(this._mctAttributeOutput_)
            + toString(this._codetagOpenEndtokenSingle_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._codetagOpen_ == child)
        {
            this._codetagOpen_ = null;
            return;
        }

        if(this._mctAttributeOutput_ == child)
        {
            this._mctAttributeOutput_ = null;
            return;
        }

        if(this._codetagOpenEndtokenSingle_ == child)
        {
            this._codetagOpenEndtokenSingle_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._codetagOpen_ == oldChild)
        {
            setCodetagOpen((TCodetagOpen) newChild);
            return;
        }

        if(this._mctAttributeOutput_ == oldChild)
        {
            setMctAttributeOutput((PMctAttributeOutput) newChild);
            return;
        }

        if(this._codetagOpenEndtokenSingle_ == oldChild)
        {
            setCodetagOpenEndtokenSingle((TCodetagOpenEndtokenSingle) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
