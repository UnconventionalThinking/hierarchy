/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.abstractsystems.partita.metacode.grammar.analysis;

import java.util.*;
import com.abstractsystems.partita.metacode.grammar.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAMctTranslationPass(AMctTranslationPass node)
    {
        defaultCase(node);
    }

    public void caseACodetagMctCodechunkOptions(ACodetagMctCodechunkOptions node)
    {
        defaultCase(node);
    }

    public void caseAOutputtagMctCodechunkOptions(AOutputtagMctCodechunkOptions node)
    {
        defaultCase(node);
    }

    public void caseASingleMctCodetagOptions(ASingleMctCodetagOptions node)
    {
        defaultCase(node);
    }

    public void caseAPairMctCodetagOptions(APairMctCodetagOptions node)
    {
        defaultCase(node);
    }

    public void caseAMctAttribtagSingle(AMctAttribtagSingle node)
    {
        defaultCase(node);
    }

    public void caseAMctAttribtagPair(AMctAttribtagPair node)
    {
        defaultCase(node);
    }

    public void caseAMctCodetagOpen(AMctCodetagOpen node)
    {
        defaultCase(node);
    }

    public void caseAMctCodetagClose(AMctCodetagClose node)
    {
        defaultCase(node);
    }

    public void caseAMctAttribute(AMctAttribute node)
    {
        defaultCase(node);
    }

    public void caseAMctCodetagAttribname(AMctCodetagAttribname node)
    {
        defaultCase(node);
    }

    public void caseADescriptortagnameStandardMctDescriptorChildren(ADescriptortagnameStandardMctDescriptorChildren node)
    {
        defaultCase(node);
    }

    public void caseADescriptortagnameBacktiksMctDescriptorChildren(ADescriptortagnameBacktiksMctDescriptorChildren node)
    {
        defaultCase(node);
    }

    public void caseADescriptorTagname(ADescriptorTagname node)
    {
        defaultCase(node);
    }

    public void caseADescriptorTagnameChildren(ADescriptorTagnameChildren node)
    {
        defaultCase(node);
    }

    public void caseADescriptorLabelnameBacktiks(ADescriptorLabelnameBacktiks node)
    {
        defaultCase(node);
    }

    public void caseASingleMctOutputtagOptions(ASingleMctOutputtagOptions node)
    {
        defaultCase(node);
    }

    public void caseAPairMctOutputtagOptions(APairMctOutputtagOptions node)
    {
        defaultCase(node);
    }

    public void caseAMctOutputtagSingle(AMctOutputtagSingle node)
    {
        defaultCase(node);
    }

    public void caseAMctOutputtagPair(AMctOutputtagPair node)
    {
        defaultCase(node);
    }

    public void caseAMctAttributeOutput(AMctAttributeOutput node)
    {
        defaultCase(node);
    }

    public void caseAMctOutputtagOpen(AMctOutputtagOpen node)
    {
        defaultCase(node);
    }

    public void caseAMctOutputtagClose(AMctOutputtagClose node)
    {
        defaultCase(node);
    }

    public void caseAMctOutputtagBody(AMctOutputtagBody node)
    {
        defaultCase(node);
    }

    public void caseTCodetagOpen(TCodetagOpen node)
    {
        defaultCase(node);
    }

    public void caseTCodetagAttribOutput(TCodetagAttribOutput node)
    {
        defaultCase(node);
    }

    public void caseTCodetagAttrib(TCodetagAttrib node)
    {
        defaultCase(node);
    }

    public void caseTCodetagEndtoken(TCodetagEndtoken node)
    {
        defaultCase(node);
    }

    public void caseTCodetagOpenEndtokenSingle(TCodetagOpenEndtokenSingle node)
    {
        defaultCase(node);
    }

    public void caseTCodetagClose(TCodetagClose node)
    {
        defaultCase(node);
    }

    public void caseTOutputtagCloseEndtoken(TOutputtagCloseEndtoken node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTSymbolBacktikText(TSymbolBacktikText node)
    {
        defaultCase(node);
    }

    public void caseTWhiteSpace(TWhiteSpace node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
