/* Copyright 2012, 2013 Unconventional Thinking
 *
 * This file is part of Hierarchy.
 *
 * Hierarchy is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * Hierarchy is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Hierarchy.  
 * If not, see <http://www.gnu.org/licenses/>.
 */

package net.unconventionalthinking.matrix.metacompiler.codegen;


/**
 * How these test work is very convoluted. 
 * 1. In the Partia project, the FieldSetTupleSpecialized_CodeGeneratorTest tests must run first! It will generate all
 *    the specialized fieldsets (as well as AppControl.java & the Symbol files) in the GenerationTestProject.
 * 
 *    *** NOTE: Often, there will be a runtime bug in AppControl.java generated by the FieldSetTupleSpecialized_CodeGeneratorTest. You may have to
 *    Modify it to get to step two (because, step to instantiates the AppControl and uses it).
 * 
 * 2. Then, run the _1_Descriptor_CodeGenerator_SchemaTest tests, to generate the Schema builders. The AppControl & Symbol files will also be regenerated
 * 2.1 select all the generated files, rt click to bring up context menu and "compile file"
 * 3. Then, run the _2_Descriptor_CodeGenerator_MatrixTest tests, to generate the Matrix builders. The AppControl & Symbol files will also be regenerated
 * 3.1 select all the generated files, rt click to bring up context menu and "compile file"
 *    
 * 4. Then, run _3_DescriptorCodeGen_GeneratedCodeTest to test the generated Schemas & Matrices' code.
 *
 *
 *
 * @author peterjoh
 */
public class _0_README {}
