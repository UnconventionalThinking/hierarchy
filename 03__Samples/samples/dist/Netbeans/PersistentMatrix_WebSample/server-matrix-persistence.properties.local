#  Properties file for the TestMatrixProject_1 matrix project
#  ** In paths, use forward slashes, \u2018/\u2019, in both unix and windows **

#  Set the path to the Hierarchy.jar directory.
#hierarchy.jar.dir=/Users/peterjoh/Projects/NDA_and_MP/Code/Hierarchy/dist
hierarchy.jar.dir=C:/Projects/Hierarchy/Code/Hierarchy/dist

#  Set the path to the javac directory.
#javac.dir=/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home/bin
javac.dir=C:/Program Files/Java/jdk1.6.0_21/bin

#  Set the class path used in All Phases of metacompilation
classpath.allphases=C:/java/servers/apache-tomcat-6.0.29/lib/servlet-api.jar;C:/java/servers/apache-tomcat-6.0.29/lib/jsp-api.jar;C:/java/servers/apache-tomcat-6.0.29/lib/jasper.jar;C:/java/servers/apache-tomcat-6.0.29/lib/el-api.jar
#  Set the class path used in the Java Phase of metacompilation
classpath.java.phase=
#  Set the class path used in the Schema Phase of metacompilation
classpath.schema.phase=
#  Set the class path used in the Matrix Phase of metacompilation
classpath.matrix.phase=
#  Set the class path used in the Embedded Phase of metacompilation
classpath.embedded.phase=


#  Set the location of base dir of the matrix source (in other words, the base dir of your project which has the matrix, schema, & embedded code files)
source.metacode.basedir=work/server/src_meta
#  Set the package name that the Matrix application classes will be placed
matrix.appclasses.package=com.williespetstore.app
#  Set the path the the base directory where the intermediate, meta build files (generated java files) will be placed.
#  Sometimes, it's useful to point this back to the 'source.metacode.basedir', so that the generated java files are placed back into the src directory.
build.meta.basedir=work/server/matrix_build/build1_meta
#  Set the path the the base directory where the final class files will be placed.
build.final.basedir=work/server/matrix_build/build2_final

#  Set whether to the final stage of compilation: Compiling the java files from the meta phase into the final class files. Default is true;
compileMetaFiles.into.finalClassFiles=true
#  Set whether to clean the build meta and build final directories before metacompilation (true or false). Default is false
clean=true

# Set whether before any metacompilation is done, to compile all the Java files in the src first. These compiled Java classes will be available
# to the schemas/matrices/embedded code. If this setting is false, then use the 'initiallyCompileJavaCode.SelectedClassesList' instead. Default is false.
# NOTE: You typically SHOULD NOT use this (so set to false), and instead, specify exactly the list of classes to initially compile using the
# 'initiallyCompileJavaCode.SelectedClassesList' setting.
initiallyCompileAllJavaCode=false
# If you want to want to individually select which classes to initially compile, set the previous setting, 'initiallyCompileAllJavaCode' to false
# (or leave empty), and supply the list of classes that you wanted the be initially compiled using this setting. Use full class names with packages,
# and separated by commas.
#   For ex. initiallyCompileJavaCode.SelectedClassesList = mypackage.myclass, mypackage.myclass2
initiallyCompileJavaCode.SelectedClassesList =



#  Server Persistence Settings _________________________________________________________________________________________________________________________

#  Set Server Settings ___________________________
persist.server.persistencecontrol.rootdir=work/server/matrix_data/serialization_ChunkTest_ServerControl
persist.server.logfilechunk.inbox.dir=work/server/matrix_data/serialization_ChunkTest_ServerInbox

persist.chunkcheck.interval.initial.ms=7000
persist.chunkcheck.interval.ms=7000

persist.rmi.registery.hostname=127.0.0.1
# can leave empty to use default port of 1099
persist.rmi.registery.port=


#  Set Client src path settings __________________
persist.client.source.metacode.basedir=src/java
persist.client.build.meta.basedir=src/java
persist.client.build.final.basedir=build/classes

