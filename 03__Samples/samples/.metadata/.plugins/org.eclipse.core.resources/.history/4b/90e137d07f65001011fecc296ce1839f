package org . apache . jsp ;
import javax . servlet . * ;
import javax . servlet . http . * ;
import javax . servlet . jsp . * ;
import net . unconventionalthinking . lang . * ;
import net . unconventionalthinking . matrix . * ;
import net . unconventionalthinking . matrix . symbols . * ;
import maintests . samples . * ;
public  final  class index_jsp extends org . apache . jasper . runtime . HttpJspBase  implements org . apache . jasper . runtime . JspSourceDependent , index_jsp__Annotations {
	AppControl_Base appControl = maintests . samples . AppControl . initializeApp ( ) ;
	ExecutionInfo executeInfo = appControl . executionInfo ;
	private static final JspFactory _jspxFactory = JspFactory . getDefaultFactory ( ) ;
	private static java . util . List _jspx_dependants ;
	private javax . el . ExpressionFactory _el_expressionfactory ;
	private org . apache . AnnotationProcessor _jsp_annotationprocessor ;
	public Object getDependants ( ) {
		return _jspx_dependants ;
		
	}
	public void _jspInit ( ) {
		_el_expressionfactory  = _jspxFactory . getJspApplicationContext ( getServletConfig ( ) . getServletContext ( ) ) . getExpressionFactory ( ) ;
		_jsp_annotationprocessor  = ( org . apache . AnnotationProcessor ) getServletConfig ( ) . getServletContext ( ) . getAttribute ( org . apache . AnnotationProcessor . class . getName ( ) ) ;
		
	}
	public void _jspDestroy ( ) {
		
	}
	public void _jspService ( HttpServletRequest request , HttpServletResponse response ) throws java . io . IOException , ServletException {
		PageContext pageContext = null ;
		HttpSession session = null ;
		ServletContext application = null ;
		ServletConfig config = null ;
		JspWriter out = null ;
		Object page = this ;
		JspWriter _jspx_out = null ;
		PageContext _jspx_page_context = null ;
		try {
			response . setContentType ( "text/html;charset=UTF-8" ) ;
			pageContext  = _jspxFactory . getPageContext ( this , request , response , null , true , 8192 , true ) ;
			_jspx_page_context  = pageContext;
			application  = pageContext . getServletContext ( ) ;
			config  = pageContext . getServletConfig ( ) ;
			session  = pageContext . getSession ( ) ;
			out  = pageContext . getOut ( ) ;
			_jspx_out  = out;
			out . write ( "\n\n\n\n\n\n\n\n\n\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n   \"http://www.w3.org/TR/html4/loose.dtd\">\n\n\n" ) ;
			out . write ( "\n\n\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n        <title>JSP Page</title>\n    </head>\n    <body>\n        <h1>Hello World!</h1>\n        requiredImagePath = " ) ;
			out . print ( index_jsp__MatrixWorker.accessMatrix_Registration$__$Form__1(executeInfo, this)) ;
			out . write ( " <br>\n    </body>\n</html>\n\n" ) ;
			out . write ( '\n' ) ;
			
		}
		catch ( Throwable t ) {
			if ( ! ( t instanceof SkipPageException ) ) {
				out  = _jspx_out;
				if ( out != null && out . getBufferSize ( ) != 0 ) try {
					out . clearBuffer ( ) ;
					
				}
				catch ( java . io . IOException e ) {
					
				}
				if ( _jspx_page_context != null ) _jspx_page_context . handlePageException ( t ) ;
				
			}
			
		}
		finally {
			_jspxFactory . releasePageContext ( _jspx_page_context ) ;
			
		}
		
	}
	
	public Object annotationHandler_3(ExecutionInfo executeInfo, 
		boolean annotationReference_Exists, Symbol annotationRef_Base, int annotationRef_AccessCounter,
		int childAccessIndex, AnnotationParameters.AccessType accessType, AnnotationParameters_AccessReturnType_OutParam accessReturnType_OutParam, 
		Descriptor rootAccessDescriptor, Descriptor currAccessors_ParentDescriptor, MatrixSet<Descriptor> currAccessors_ParentDescriptorSet, 
		boolean passingInException, Exception e, Pair<Object, Object>... childAccessor_Pairs) {

		
		//  Default:
				return null ;


	}





}
